// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NasaAsteroid.Infrastructure.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NasaAsteroid.Infrastructure.Migrations
{
    [DbContext(typeof(AsteroidDbContext))]
    partial class AsteroidDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("nasaAsteroids")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NasaAsteroid.Domain.Entities.Asteroid", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("ClassType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FallStaus")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("NameType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClassType");

                    b.HasIndex("Name");

                    b.ToTable("Asteroids", "nasaAsteroids");
                });

            modelBuilder.Entity("NasaAsteroid.Domain.Entities.Asteroid", b =>
                {
                    b.OwnsOne("NasaAsteroid.Domain.ValueObjects.Coordinates", "Coordinates", b1 =>
                        {
                            b1.Property<int>("AsteroidId")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("AsteroidId");

                            b1.ToTable("Asteroids", "nasaAsteroids");

                            b1.WithOwner()
                                .HasForeignKey("AsteroidId");
                        });

                    b.OwnsOne("NasaAsteroid.Domain.ValueObjects.Mass", "Mass", b1 =>
                        {
                            b1.Property<int>("AsteroidId")
                                .HasColumnType("integer");

                            b1.Property<double?>("Value")
                                .HasColumnType("double precision");

                            b1.HasKey("AsteroidId");

                            b1.ToTable("Asteroids", "nasaAsteroids");

                            b1.WithOwner()
                                .HasForeignKey("AsteroidId");
                        });

                    b.OwnsOne("NasaAsteroid.Domain.ValueObjects.Year", "Year", b1 =>
                        {
                            b1.Property<int>("AsteroidId")
                                .HasColumnType("integer");

                            b1.Property<int>("Value")
                                .HasColumnType("integer");

                            b1.HasKey("AsteroidId");

                            b1.HasIndex("Value");

                            b1.ToTable("Asteroids", "nasaAsteroids");

                            b1.WithOwner()
                                .HasForeignKey("AsteroidId");
                        });

                    b.Navigation("Coordinates")
                        .IsRequired();

                    b.Navigation("Mass")
                        .IsRequired();

                    b.Navigation("Year")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
